[gd_scene load_steps=15 format=3 uid="uid://ccy058h2et4uf"]

[ext_resource type="Script" path="res://addons/control_camera3d/nodes/control_camera_3d.gd" id="1_1ul6h"]
[ext_resource type="PackedScene" uid="uid://dmeydy06akfvx" path="res://game/assets/environments/dark_environment.tscn" id="3_53itu"]
[ext_resource type="ArrayMesh" uid="uid://diysidewt22iv" path="res://game/gizmos/frame_arrows.res" id="3_x5j78"]

[sub_resource type="GDScript" id="GDScript_pi440"]
script/source = "extends Node3D
var ASSET_NAME = \"Servo\"

func _ready():
	pass
func _process(_delta: float):
	pass
"

[sub_resource type="BoxMesh" id="BoxMesh_sn0tr"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_p4bn3"]
albedo_color = Color(1, 1, 0, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_4seqi"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_7eo23"]
transparency = 1
shading_mode = 0
vertex_color_use_as_albedo = true
vertex_color_is_srgb = true
albedo_color = Color(0, 0.6, 0.7, 0.42)

[sub_resource type="ArrayMesh" id="ArrayMesh_h1apo"]
_surfaces = [{
"aabb": AABB(-0.5, -0.5, -0.5, 1.00001, 1, 1),
"format": 1,
"material": SubResource("StandardMaterial3D_7eo23"),
"primitive": 1,
"vertex_count": 24,
"vertex_data": PackedByteArray(0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 191, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63, 0, 0, 0, 63)
}]

[sub_resource type="BoxMesh" id="BoxMesh_daaen"]
size = Vector3(5, 0.5, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fhp64"]
albedo_color = Color(0, 1, 1, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_rdhue"]
size = Vector3(5, 0.5, 1)

[sub_resource type="ArrayMesh" id="ArrayMesh_gtpj7"]
_surfaces = [{
"aabb": AABB(-2.5, -0.25, -0.5, 5.00001, 0.5, 1),
"format": 1,
"material": SubResource("StandardMaterial3D_7eo23"),
"primitive": 1,
"vertex_count": 24,
"vertex_data": PackedByteArray(0, 0, 32, 64, 0, 0, 128, 190, 0, 0, 0, 191, 0, 0, 32, 192, 0, 0, 128, 190, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 190, 0, 0, 0, 63, 0, 0, 32, 64, 0, 0, 128, 190, 0, 0, 0, 191, 0, 0, 32, 192, 0, 0, 128, 190, 0, 0, 0, 63, 0, 0, 32, 64, 0, 0, 128, 190, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 190, 0, 0, 0, 191, 0, 0, 32, 192, 0, 0, 128, 190, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 32, 64, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 32, 192, 0, 0, 128, 190, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 32, 192, 0, 0, 128, 190, 0, 0, 0, 191, 0, 0, 32, 192, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 190, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 32, 64, 0, 0, 128, 190, 0, 0, 0, 63, 0, 0, 32, 64, 0, 0, 128, 62, 0, 0, 0, 63)
}]

[sub_resource type="GDScript" id="GDScript_6ncas"]
script/source = "extends HingeJoint3D
@onready var link: RigidBody3D = get_node(\"../\")
@export var target_angle: float = 0.0
var max_speed: float = 1.0
var k : float = 1.0

func _ready():
	link.can_sleep = false
	set_flag(FLAG_ENABLE_MOTOR, true)
	print(\"joint basis: \", transform.basis)
	

func _physics_process(_delta):
	var arm_basis = link.global_transform.basis * transform.basis
#	print(\"arm basis: \", arm_basis)
	var angle = arm_basis.get_euler(EULER_ORDER_XYZ).z
	print(\"link.rotation: \", rad_to_deg(angle))
	var err = deg_to_rad(target_angle) - angle
#	print(\"err: \", err)
	var speed: float
	if abs(err) > deg_to_rad(1):
#		print(\"far\")
		speed = max_speed * sign(err)
	else:
#		print(\"near\")
		speed = err * k
	set_param(HingeJoint3D.PARAM_MOTOR_TARGET_VELOCITY, -speed)

func _target_angle_changed(value: float):
	target_angle = value
"

[node name="SandBox" type="Node3D"]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.935475, 0.146056, -0.321799, 0.131205, 0.701969, 0.700018, 0.328134, -0.697071, 0.637511, 0, 2.0046, 9.21941)

[node name="ControlCamera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.927435, 0.373985, 0, -0.373985, 0.927435, 0, 3.70431, 9.18621)
script = ExtResource("1_1ul6h")
action_mouse_button = "LEFT_BUTTON"
zoom_speed = 1.5
zoom_out = 30.0

[node name="DarkEnvironment" parent="." instance=ExtResource("3_53itu")]

[node name="Servo" type="Node3D" parent="." groups=["ASSETS", "ROBOTS"]]
script = SubResource("GDScript_pi440")
metadata/asset_name = "servo"

[node name="base_link" type="RigidBody3D" parent="Servo" groups=["SELECT"]]
transform = Transform3D(0.707107, -0.707107, 0, 0.707107, 0.707107, 0, 0, 0, 1, 0, 2, 0)
mass = 10.0
freeze = true

[node name="base_link_frame" type="MeshInstance3D" parent="Servo/base_link" groups=["FRAME"]]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0)
visible = false
mesh = ExtResource("3_x5j78")

[node name="base_link_mesh" type="MeshInstance3D" parent="Servo/base_link" groups=["VISUAL"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
mesh = SubResource("BoxMesh_sn0tr")
surface_material_override/0 = SubResource("StandardMaterial3D_p4bn3")

[node name="_col" type="CollisionShape3D" parent="Servo/base_link"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
shape = SubResource("BoxShape3D_4seqi")

[node name="_debug" type="MeshInstance3D" parent="Servo/base_link" groups=["COLLISION"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
visible = false
mesh = SubResource("ArrayMesh_h1apo")

[node name="rotation_link" type="RigidBody3D" parent="Servo/base_link" groups=["SELECT"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.3, 0)
mass = 5.0

[node name="rotation_link_frame" type="MeshInstance3D" parent="Servo/base_link/rotation_link" groups=["FRAME"]]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0)
visible = false
mesh = ExtResource("3_x5j78")

[node name="rotation_link_mesh" type="MeshInstance3D" parent="Servo/base_link/rotation_link" groups=["VISUAL"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)
mesh = SubResource("BoxMesh_daaen")
surface_material_override/0 = SubResource("StandardMaterial3D_fhp64")

[node name="_col" type="CollisionShape3D" parent="Servo/base_link/rotation_link"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)
shape = SubResource("BoxShape3D_rdhue")

[node name="_debug" type="MeshInstance3D" parent="Servo/base_link/rotation_link" groups=["COLLISION"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0)
visible = false
mesh = SubResource("ArrayMesh_gtpj7")

[node name="motor" type="HingeJoint3D" parent="Servo/base_link/rotation_link" groups=["REVOLUTE"]]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
node_a = NodePath("../..")
node_b = NodePath("..")
script = SubResource("GDScript_6ncas")
target_angle = 90.0
